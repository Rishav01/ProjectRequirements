Below are some functional requirement BeBetter application:

Phase 1:
Core Requirement:
User Feature Related:
@@@ [Done] User should be able to Register himself
@@@ [Done] We can sign up user with some basic details.
  a. UI will call the login api of user service. If user logged in successfully then 200 with user object. If user login failed then 401. Message could be 
     "incorrect password" or "user with this user id does not exist"
@@@ [Done] User should be able to login using basic authentication before they can perform anything.
@@@ [Done] User should be able to update his profile
@@@ [Done] User should be able to delete his profile
@@@ [Done ]We have should have plans for the user. Like silver, gold and platinum. A user should be able to keep 2, 5 and 10 task for these plans respectively.  
@@@ Should we able to just upgrade the plan

Task Feature Related:
@@@ [Done] User can add task for today or for any future date. But only after the task is allowed according to user current plan. (User serice call involved)
@@@ User can perform below actions on the task:
  @@@ should be able to assign points to the task. 
  @@@ Should be able to complete or cancel the task.
  @@@ Should be able to update the task and any of its property
@@@ User should be able to fetch all the tasks, its basic details and total points for all the task
@@@ User should be able to be able to complete the task by giving points to that task. like 5 point of 10 points.
@@@ User must not be able to add task more than allowed in his plan

User Feature Related: Diary Related
@@@ [Done] In all the request, user should be able to authenticate calling user service and only then serve the request
@@@ [Done] Diary Current status: Fetch all task of the day with points for a user
@@@ Current Day efficiency status: User should be able to calculate the total efficiency of the day
@@@ Mornthly report: User should be able to add get the average efficiency of a month
@@@ Yearly report: User should be able to get a yearly report


Phase 2:
@@@User should be kept encrypted and only be decrypted during authentication process.
@@@Proper exception handling in entire application including the status code for 500 and other
@@@Put logs wisely
@@@SHould allow sub tasks
@@@Should have a feature of dialy tasks



Important Resources:
Free mysql database: https://www.freesqldatabase.com/account/
Php admin (Db client): https://phpmyadmin.co/sql.php?server=1&db=sql12600753&table=plan&pos=0
